/*
 * POS Clothes es un sistema informático que está reservado con derechos de 
 * autor, para más información: https://github.com/AlexBollen/POS_Clothes
 */
package org.wass.views;

import com.mysql.cj.xdevapi.JsonArray;
import org.json.JSONObject;
import org.wass.controllers.product.StockController;
import org.wass.controllers.sale.ClienteController;
import org.wass.controllers.sale.FacturaController;
import org.wass.controllers.sale.SerieFacturaController;
import org.wass.models.product.StockPosModel;
import org.wass.models.sale.CajaModel;
import org.wass.models.sale.ClienteModel;
import org.wass.models.sale.FacturaModel;
import org.wass.models.sale.SerieFacturaModel;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import org.json.JSONArray;

/**
 *
 * @author Alex
 */
public class POS extends javax.swing.JPanel {

    private FacturaController facturaController;
    private SerieFacturaController serieFacturaController;
    private StockController stockController;
    private ClienteController clienteController;
    private CajaModel cajaUsuario;

    private DefaultTableModel carritoTableModel;
    private DefaultTableModel productosTableModel;

    private ClienteModel cliente;
    private int productoSeleccionado;
    private double totalVenta = 0;

    /**
     * Creates new form POS
     */
    public POS(
            FacturaController facturaController,
            SerieFacturaController serieFacturaController,
            StockController stockController,
            ClienteController clienteController,
            CajaModel cajaUsuario
    ) {
        this.facturaController = facturaController;
        this.serieFacturaController = serieFacturaController;
        this.stockController = stockController;
        this.clienteController = clienteController;
        this.cajaUsuario = cajaUsuario;
        initComponents();

        // <editor-fold defaultState="collapsed" desc="Seteo de Modelos para tablas">
        //Agregar Modelo para tabla de carrito de compra
        carritoTableModel = new DefaultTableModel(new String[] {"Id", "Producto", "Cantidad", "Total"}, 0) {
            boolean[] canEdit = new boolean[] {false, false, false, false};

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };

        //Agregar Modelo para tabla de  productos
        productosTableModel = new DefaultTableModel(new String[] {"Id", "Producto", "Tipo", "Disponible", "Precio", "Ubicación"}, 0) {
            boolean[] canEdit = new boolean[] {false, false, false, false, false, false};

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };

        tblCarrito.setModel(carritoTableModel);
        tblProductos.setModel(productosTableModel);

        loadSeries();
        loadStocks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cabecera = new javax.swing.JPanel();
        lblPOS = new javax.swing.JLabel();
        cuerpo = new javax.swing.JPanel();
        listPanel = new javax.swing.JPanel();
        listScrollPane = new javax.swing.JScrollPane();
        tblCarrito = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        lblTotalPendiente = new javax.swing.JLabel();
        txtFieldTotalPagado = new javax.swing.JTextField();
        btnRealizarVenta = new javax.swing.JButton();
        productosScrollPane = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        lblListTitle = new javax.swing.JLabel();
        listProductosTitle = new javax.swing.JLabel();
        listClienteTitle = new javax.swing.JLabel();
        txtFieldCliente = new javax.swing.JTextField();
        btnBuscarCliente = new javax.swing.JButton();
        btnConsumidorFinal = new javax.swing.JButton();
        lblSerieFactura = new javax.swing.JLabel();
        comboBoxSerieFactura = new JComboBox<SerieFacturaModel>();
        lblNombreCliente = new javax.swing.JLabel();
        lblNitCliente = new javax.swing.JLabel();
        lblProductoSeleccionado = new javax.swing.JLabel();
        txtFieldCantidadProducto = new javax.swing.JTextField();
        btnAgregarProducto = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblNumeroFactura = new javax.swing.JLabel();
        txtFieldNumeroFactura = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        cabecera.setBackground(new java.awt.Color(0, 52, 89));
        cabecera.setPreferredSize(new java.awt.Dimension(1000, 60));

        lblPOS.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblPOS.setForeground(new java.awt.Color(255, 255, 255));
        lblPOS.setText("POS");

        javax.swing.GroupLayout cabeceraLayout = new javax.swing.GroupLayout(cabecera);
        cabecera.setLayout(cabeceraLayout);
        cabeceraLayout.setHorizontalGroup(
            cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabeceraLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblPOS)
                .addContainerGap(929, Short.MAX_VALUE))
        );
        cabeceraLayout.setVerticalGroup(
            cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabeceraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPOS)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(cabecera, java.awt.BorderLayout.PAGE_START);

        cuerpo.setBackground(new java.awt.Color(237, 242, 244));
        cuerpo.setLayout(new java.awt.BorderLayout());

        tblCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        listScrollPane.setViewportView(tblCarrito);

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblTotal.setText("Total: Q.0");

        lblTotalPendiente.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblTotalPendiente.setText("Total pagado:");

        txtFieldTotalPagado.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtFieldTotalPagado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldTotalPagadoActionPerformed(evt);
            }
        });

        btnRealizarVenta.setBackground(new java.awt.Color(141, 153, 174));
        btnRealizarVenta.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnRealizarVenta.setForeground(new java.awt.Color(0, 0, 0));
        btnRealizarVenta.setText("REALIZAR VENTA");
        btnRealizarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarVentaActionPerformed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        productosScrollPane.setViewportView(tblProductos);

        lblListTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblListTitle.setText("Productos en carrito");

        listProductosTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        listProductosTitle.setText("Productos");

        listClienteTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        listClienteTitle.setText("Cliente");

        txtFieldCliente.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtFieldCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldClienteActionPerformed(evt);
            }
        });

        btnBuscarCliente.setBackground(new java.awt.Color(141, 153, 174));
        btnBuscarCliente.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnBuscarCliente.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        btnConsumidorFinal.setBackground(new java.awt.Color(141, 153, 174));
        btnConsumidorFinal.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnConsumidorFinal.setForeground(new java.awt.Color(0, 0, 0));
        btnConsumidorFinal.setText("C/F");
        btnConsumidorFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsumidorFinalActionPerformed(evt);
            }
        });

        lblSerieFactura.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblSerieFactura.setText("Serie de factura:");

        comboBoxSerieFactura.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        comboBoxSerieFactura.setPreferredSize(new java.awt.Dimension(64, 28));

        lblNombreCliente.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblNombreCliente.setText("Nombre del cliente");

        lblNitCliente.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblNitCliente.setText("Nit del cliente");

        lblProductoSeleccionado.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblProductoSeleccionado.setText("Producto seleccionado");

        txtFieldCantidadProducto.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtFieldCantidadProducto.setEnabled(false);
        txtFieldCantidadProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldCantidadProductoActionPerformed(evt);
            }
        });

        btnAgregarProducto.setBackground(new java.awt.Color(141, 153, 174));
        btnAgregarProducto.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnAgregarProducto.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarProducto.setText("Agregar");
        btnAgregarProducto.setEnabled(false);
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        jSeparator1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblNumeroFactura.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblNumeroFactura.setText("Número de factura:");

        txtFieldNumeroFactura.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtFieldNumeroFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldNumeroFacturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listPanelLayout.createSequentialGroup()
                        .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblListTitle)
                            .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addComponent(listProductosTitle)
                            .addComponent(lblNombreCliente)
                            .addComponent(lblNitCliente)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                                .addComponent(lblProductoSeleccionado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                .addComponent(txtFieldCantidadProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregarProducto))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                                .addComponent(listClienteTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnConsumidorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(productosScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(listPanelLayout.createSequentialGroup()
                        .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotal)
                            .addComponent(lblNumeroFactura)
                            .addComponent(txtFieldNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxSerieFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSerieFactura))
                        .addGap(28, 28, 28)
                        .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFieldTotalPagado)
                            .addComponent(btnRealizarVenta, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(lblTotalPendiente))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblListTitle)
                    .addComponent(listProductosTitle))
                .addGap(7, 7, 7)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(listPanelLayout.createSequentialGroup()
                        .addComponent(productosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductoSeleccionado)
                            .addComponent(txtFieldCantidadProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarProducto))
                        .addGap(20, 20, 20)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listClienteTitle)
                            .addComponent(txtFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarCliente)
                            .addComponent(btnConsumidorFinal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNombreCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNitCliente)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(lblTotalPendiente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerieFactura)
                    .addComponent(txtFieldTotalPagado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumeroFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRealizarVenta)
                    .addComponent(comboBoxSerieFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        cuerpo.add(listPanel, java.awt.BorderLayout.CENTER);

        add(cuerpo, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtFieldTotalPagadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldTotalPagadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldTotalPagadoActionPerformed

    private void txtFieldClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldClienteActionPerformed

    private void txtFieldCantidadProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldCantidadProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldCantidadProductoActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        try {
            String nit = txtFieldCliente.getText();
            cliente = clienteController.obtenerClientePorNit(nit);
            if (cliente != null) {
                lblNombreCliente.setText("Nombre: " + cliente.getNombrePersona());
                lblNitCliente.setText("Nit: " + cliente.getNit());
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro ningún cliente");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al buscar cliente: " + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnConsumidorFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsumidorFinalActionPerformed
        cliente = null;
        txtFieldCliente.setText(null);
        lblNombreCliente.setText("Nombre: C/F");
        lblNitCliente.setText("Nit: C/F");
    }//GEN-LAST:event_btnConsumidorFinalActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        productoSeleccionado = tblProductos.rowAtPoint(evt.getPoint());
        txtFieldCantidadProducto.setText(null);
        txtFieldCantidadProducto.setEnabled(true);
        btnAgregarProducto.setEnabled(true);
    }//GEN-LAST:event_tblProductosMouseClicked

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        if (productoSeleccionado != -1)
            addProducto(productoSeleccionado);
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    @SuppressWarnings("deprecation")
    private void btnRealizarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarVentaActionPerformed
        Integer idCliente = null;
        if (cliente != null)
            idCliente = cliente.getIdCliente();
        SerieFacturaModel serie = (SerieFacturaModel) comboBoxSerieFactura.getSelectedItem();        
        FacturaModel nuevaVenta = new FacturaModel(
                txtFieldNumeroFactura.getText(),
                totalVenta,
                idCliente,
                1, // Estático porque siempre será en efectivo
                cajaUsuario.getIdCaja(),
                serie.getIdSerie()
        );
        int res = facturaController.agregarVenta(nuevaVenta, convertToJSON());
        if (res == 1)
            clearFields();
    }//GEN-LAST:event_btnRealizarVentaActionPerformed

    private void txtFieldNumeroFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldNumeroFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldNumeroFacturaActionPerformed

    private void loadSeries() {
        comboBoxSerieFactura.removeAllItems();
        try {
            List<SerieFacturaModel> series = serieFacturaController.obtenerSeriesFactura();
            for (SerieFacturaModel serie : series) {
                comboBoxSerieFactura.addItem(serie);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar series de factura: " + e.getMessage());
        }
    }

    private void loadStocks() {
        List<StockPosModel> stocks = stockController.obtenerStocksPos();
        String[] row = new String[6];
        for (StockPosModel stock : stocks) {
            row[0] = String.valueOf(stock.getIdStock());
            row[1] = stock.getNombreProducto();
            row[2] = stock.getTipoProducto();
            row[3] = String.valueOf(stock.getCantidadDisponible());
            row[4] = "Q.".concat(String.valueOf(stock.getPrecioVenta()));
            row[5] = stock.getUbicacionBodega();
            productosTableModel.addRow(row);
        }
    }

    private void addProducto(int index) {
        try {
            String txtCantidad = String.valueOf(txtFieldCantidadProducto.getText());
            int cantidad = Integer.parseInt(txtCantidad);
            int cantidadActual = Integer.parseInt(String.valueOf(tblProductos.getValueAt(index, 3)));
            if (cantidad <= 0) {
                JOptionPane.showMessageDialog(this, "Cantidad invalida");
            } else {
                if (cantidad > cantidadActual) {
                    JOptionPane.showMessageDialog(this, "No hay existencias suficientes");
                } else {
                    String[] row = new String[4];
                    String txtPrice = String.valueOf(tblProductos.getValueAt(index, 4));
                    double price = Double.parseDouble(txtPrice.substring(2, txtPrice.length() - 2));
                    double total = cantidad * price;
                    row[0] = String.valueOf(tblProductos.getValueAt(index, 0));
                    row[1] = String.valueOf(tblProductos.getValueAt(index, 1));
                    row[2] = txtCantidad;
                    row[3] = String.valueOf(total);
                    carritoTableModel.addRow(row);
                    totalVenta += total;
                    lblTotal.setText("Total: Q." + String.valueOf(totalVenta));
                    cantidadActual -= cantidad;
                    tblProductos.setValueAt(String.valueOf(cantidadActual), index, 3);
                    txtFieldCantidadProducto.setText(null);
                    txtFieldCantidadProducto.setEnabled(false);
                    btnAgregarProducto.setEnabled(false);
                    productoSeleccionado = -1;
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un número entero");
        }
    }

    private String convertToJSON() {
        JSONArray jsonArray = new JSONArray();
        for (int row = 0; row < carritoTableModel.getRowCount(); row++) {
            JSONObject rowObject = new JSONObject();
            rowObject.put("idStock", carritoTableModel.getValueAt(row, 0));
            rowObject.put("cantidad", carritoTableModel.getValueAt(row, 2));
            jsonArray.put(rowObject);
        }
        return jsonArray.toString();
    }

    private void clearFields() {
        carritoTableModel.setRowCount(0);
        cliente = null;
        lblNitCliente.setText("Nit del cliente");
        lblNombreCliente.setText("Nombre del cliente");
        lblTotal.setText("Total: Q.0");
        txtFieldCliente.setText(null);
        txtFieldCantidadProducto.setText(null);
        txtFieldNumeroFactura.setText(null);
        txtFieldTotalPagado.setText(null);
        txtFieldCantidadProducto.setEnabled(false);
        btnAgregarProducto.setEnabled(false);
        totalVenta = 0;
        comboBoxSerieFactura.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnConsumidorFinal;
    private javax.swing.JButton btnRealizarVenta;
    private javax.swing.JPanel cabecera;
    private JComboBox<SerieFacturaModel> comboBoxSerieFactura;
    private javax.swing.JPanel cuerpo;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblListTitle;
    private javax.swing.JLabel lblNitCliente;
    private javax.swing.JLabel lblNombreCliente;
    private javax.swing.JLabel lblNumeroFactura;
    private javax.swing.JLabel lblPOS;
    private javax.swing.JLabel lblProductoSeleccionado;
    private javax.swing.JLabel lblSerieFactura;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalPendiente;
    private javax.swing.JLabel listClienteTitle;
    private javax.swing.JPanel listPanel;
    private javax.swing.JLabel listProductosTitle;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JScrollPane productosScrollPane;
    private javax.swing.JTable tblCarrito;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtFieldCantidadProducto;
    private javax.swing.JTextField txtFieldCliente;
    private javax.swing.JTextField txtFieldNumeroFactura;
    private javax.swing.JTextField txtFieldTotalPagado;
    // End of variables declaration//GEN-END:variables
}
